#!/usr/bin/env node
// vi: ft=javascript
/* Read Google Calendar event data from a file and notify the Luxafor webhook */

const { mkdirp } = require("mkdirp");
const { fetch } = require("undici");
const path = require("node:path");
const os = require("node:os");
const util = require("node:util");
const exec = util.promisify(require("node:child_process").exec);
const fs = require("node:fs/promises");
const APP_DATA_DIR = path.join(
  os.homedir(),
  ".local/share/@fatso83/luxafor-calendar"
);
const idFile = `${APP_DATA_DIR}/current-event-id.dat`;
const luxaforId = process.env["LUXAFOR_ID"];

async function main() {
  await requirements();

  const cmd = "fetch-todays-calendar --data-location";
  const result = await exec(cmd);
  const events = JSON.parse(await fs.readFile(result.stdout.trim()));

  const now = new Date();

  const onGoingEvent = events.find(
    (event) =>
      new Date(event.start.dateTime) < now && new Date(event.end.dateTime) > now
  );
  const passedEventsInLast3Minutes = events.find(
    (event) =>
      new Date(event.end.dateTime) < now &&
      new Date(event.end.dateTime) > new Date(now.getTime() - 3 * 60 * 1000)
  );
  const eventHasStarted = !!onGoingEvent;

  const url = "https://api.luxafor.com/webhook/v1/actions/solid_color";
  if (eventHasStarted) {
    await Promise.all([
      fs.writeFile(idFile, onGoingEvent.id),
      fetch(url, {
        body: JSON.stringify({
          userId: luxaforId,
          actionFields: {
            color: "green",
          },
        }),
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
      }),
    ]);
  } else if (passedEventsInLast3Minutes) {
    /* This fails if the read call fails for some reason */
    await fs.stat(idFile).then(
      (_) => {
        return fs
          .readFile(idFile)
          .then((buf) => buf.toString().trim())
          .then((lastStartedEventId) => {
            userLog(
              `Last event id touched by this util: '${lastStartedEventId}'.`
            );
            if (lastStartedEventId === passedEventsInLast3Minutes.id) {
              userLog("Will proceed to turn off the Luxafor");
              return fetch(url, {
                body: JSON.stringify({
                  userId: luxaforId,
                  actionFields: {
                    color: "custom",
                    custom_color: "000000",
                  },
                }),
                method: "POST",
                headers: {
                  "Content-Type": "application/json",
                },
              });
            }
          });
      },
      (err) => {
        /* ignore non-existing */
        userLog(err);
        userLog(
          "This util has not flipped the Luxafor light for any current events, so not doing anything."
        );
      }
    );
  } else {
    userLog(
      `No event in progress and no known event stopped in the last few minutes`
    );
    await fs.stat(idFile).then(
      (_) => fs.rm(idFile),
      (_err) => {}
    );
  }
}

async function requirements() {
  try {
    await fs.stat(APP_DATA_DIR);
  } catch (err) {
    userLog(
      `No app data dir found. Creating directory ${APP_DATA_DIR} to store app data.`
    );
    mkdirp(APP_DATA_DIR);
  }

  if (!luxaforId) {
    console.error("You need to set the environment variable LUXAFOR_ID");
    process.exit(1);
  }
}

function userLog(...args) {
  const silent = process.argv[2] === "--silent";
  if (silent) return;
  console.log(...args);
}

main();
