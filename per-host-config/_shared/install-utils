# source this package
# set ft=bash

install_node_packages(){
    _shared_package_info_message "Node"

    if ! command_exists n; then
        info "Upgrading Node using n"
        npm install -g n
        n stable
    fi

    h3 "Installing Node packages ...\n"
    installed=$(mktemp)
    npm list -g --depth 1 --json | jq -r -c '.dependencies | keys | .[]' > $installed
    #filters out patterns that are present in the other file, see https://stackoverflow.com/questions/4780203/deleting-lines-from-one-file-which-are-in-another-file
    node_apps=$(grep -v -f $installed ../_shared/node.local || true) 
    # if non-zero, https://unix.stackexchange.com/a/146945/18594
    if [[ -n "${node_apps// }" ]]; then
        npm -g install $node_apps 
    fi
}

install_python_packages(){
    # https://github.com/pypa/pip/issues/5240
    _shared_package_info_message "Python"

    h3 "Upgrading pip\n"
    pip(){ python3 -m pip $@; } # to avoid warning about script wrapper and old python
    pip install --upgrade --user pip

    h3 "Installing Python packages ...\n"
    pip install --user --upgrade -r ../_shared/python.local  | grep -v 'Requirement already satisfied:'
}

install_ruby_packages(){
    _shared_package_info_message Ruby

    while read line; do 
        if gem list -i $line > /dev/null; then
            continue
        fi

        sudo gem install $line; 
    done < ../_shared/ruby.local 
}

_shared_package_info_message(){
    h2 "Installing shared setup for:  $1"
}
